coucou
sphere
	propriety: origin
	propriety: colorRGB
	propriety: rayon
sphere
	propriety: origin
	propriety: colorRGB
	propriety: rayon
origin
name demo_2
width 1280
height 800
rot 0.000000, 0.000000, 0.000000
campos 7.000000, 0.000000, 0.000000
camdir -1.000000, 0.000000, 0.000000

name 0
color FF00
dir 0.000000, 0.000000, 0.000000
pos -3.000000, -3.000000, -2.000000
alpha 0.000000
rayon 1.000000


name 0
color FF00
dir 0.000000, 0.000000, 0.000000
pos 0.000000, 0.000000, 0.000000
alpha 0.000000
rayon 1.000000

pos 3.000000, 3.000000, 0.000000
Init ok
File_to_str ok
cl_load_program_from_source enter
cl_load_program_from_source middle
Error: Failed to build program executable!-11
<program source>:113:8: error: redeclaration of 'normalize' must have the 'overloadable' attribute
float3  normalize(float3 v);
       ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: previous overload of function is here
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:526:21: note: expanded from macro '__CLFN_FD_1FD_MODD4'
float3 __OVERLOAD__ name(float3 x); \
                    ^
<program source>:122:5: error: conflicting types for 'calc_rayon'
int     calc_rayon(t_scene scene, float3 ray)
    ^
<program source>:116:8: note: previous declaration is here
size_t  calc_rayon(t_scene *scene, float3 ray);
       ^
<program source>:127:21: error: passing 't_scene' (aka 'struct s_scene') to parameter of incompatible type 't_scene *' (aka 'struct s_scene *'); take the address with &
        shortest_obj = hit(scene, ray, output);
                    ^~~~~
                    &
<program source>:117:21: note: passing argument to parameter 'scene' here
t_obj   *hit(t_scene *scene, double *scene_cam_pos, float3 ray);
                    ^
<program source>:129:24: error: passing 't_scene' (aka 'struct s_scene') to parameter of incompatible type 't_scene *' (aka 'struct s_scene *'); take the address with &
                return (calc_all_lum(scene, shortest_obj, ray));
                       ^~~~~
                       &
<program source>:115:30: note: passing argument to parameter 'scene' here
size_t  calc_all_lum(t_scene *scene, t_obj *obj, float3 ray);
                             ^
<program source>:133:6: warning: no previous prototype for function 'init_norm_cam_dir'
void    init_norm_cam_dir(float3 *norm_vert, float3 *norm_hor, float3 dir)
     ^
<program source>:139:11: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.z = 0;
  ~~~~~~~~^~
<program source>:140:11: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.x = sqrt(dir.y * dir.y / (dir.x * dir.x + dir.y * dir.y));
  ~~~~~~~~^~
<program source>:141:11: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.y = -dir.x / dir.y * norm_hor.x;
  ~~~~~~~~^~
<program source>:141:41: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.y = -dir.x / dir.y * norm_hor.x;
                                ~~~~~~~~^~
<program source>:142:15: error: member reference base type '__float3 *' is not a structure or union
                if (norm_hor.y < 0)
      ~~~~~~~~^~
<program source>:143:12: error: member reference base type '__float3 *' is not a structure or union
                        norm_hor.y *= -1;
   ~~~~~~~~^~
<program source>:147:11: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.z = 0;
  ~~~~~~~~^~
<program source>:148:11: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.y = sqrt(dir.x * dir.x / (dir.x * dir.x + dir.y * dir.y));
  ~~~~~~~~^~
<program source>:149:15: error: member reference base type '__float3 *' is not a structure or union
                if (norm_hor.y < 0)
      ~~~~~~~~^~
<program source>:150:12: error: member reference base type '__float3 *' is not a structure or union
                        norm_hor.y *= -1;
   ~~~~~~~~^~
<program source>:151:11: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.x = -dir.y / dir.x * norm_hor.y;
  ~~~~~~~~^~
<program source>:151:41: error: member reference base type '__float3 *' is not a structure or union
                norm_hor.x = -dir.y / dir.x * norm_hor.y;
                                ~~~~~~~~^~
<program source>:153:2: error: no matching function for call to 'normalize'
        normalize(norm_hor);
 ^~~~~~~~~
<program source>:113:8: note: candidate function not viable: no known conversion from '__float3 *' to '__float3' for 1st argument; dereference the argument with *
float3  normalize(float3 v);
       ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to 'float' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:524:54: note: expanded from macro '__CLFN_FD_1FD_MODD4'
#define __CLFN_FD_1FD_MODD4(name) float __OVERLOAD__ name(float x); \
                                                     ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__float2' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:525:21: note: expanded from macro '__CLFN_FD_1FD_MODD4'
float2 __OVERLOAD__ name(float2 x); \
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__float4' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:527:21: note: expanded from macro '__CLFN_FD_1FD_MODD4'
float4 __OVERLOAD__ name(float4 x); \
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to 'double' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:528:21: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double __OVERLOAD__ name(double x); \
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__double2' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:529:22: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double2 __OVERLOAD__ name(double2 x); \
                     ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__double3' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:530:22: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double3 __OVERLOAD__ name(double3 x); \
                     ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__double4' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:531:22: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double4 __OVERLOAD__ name(double4 x);
                     ^
<program source>:154:20: error: passing '__float3 *' to parameter of incompatible type '__float3'; dereference with *
        vectorial_product(norm_vert, norm_hor, dir);
                   ^~~~~~~~~
                   *
<program source>:121:31: note: passing argument to parameter 'res' here
void    vectorial_product(float3 res, float3 u, float3 v);
                              ^
<program source>:155:2: error: no matching function for call to 'normalize'
        normalize(norm_vert);
 ^~~~~~~~~
<program source>:113:8: note: candidate function not viable: no known conversion from '__float3 *' to '__float3' for 1st argument; dereference the argument with *
float3  normalize(float3 v);
       ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to 'float' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:524:54: note: expanded from macro '__CLFN_FD_1FD_MODD4'
#define __CLFN_FD_1FD_MODD4(name) float __OVERLOAD__ name(float x); \
                                                     ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__float2' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:525:21: note: expanded from macro '__CLFN_FD_1FD_MODD4'
float2 __OVERLOAD__ name(float2 x); \
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__float4' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:527:21: note: expanded from macro '__CLFN_FD_1FD_MODD4'
float4 __OVERLOAD__ name(float4 x); \
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to 'double' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:528:21: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double __OVERLOAD__ name(double x); \
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__double2' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:529:22: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double2 __OVERLOAD__ name(double2 x); \
                     ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__double3' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:530:22: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double3 __OVERLOAD__ name(double3 x); \
                     ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:5029:21: note: candidate function not viable: no known conversion from '__float3 *' to '__double4' for 1st argument
__CLFN_FD_1FD_MODD4(normalize);
                    ^
/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/A/lib/clang/3.5/include/cl_kernel.h:531:22: note: expanded from macro '__CLFN_FD_1FD_MODD4'
double4 __OVERLOAD__ name(double4 x);
                     ^
<program source>:156:37: error: member reference base type '__float3 *' is not a structure or union
        printf("hor %f, %f, %f\n", norm_hor.x, norm_hor.y,norm_hor.z); 
                            ~~~~~~~~^~
<program source>:157:39: error: member reference base type '__float3 *' is not a structure or union
        printf("vert %f, %f, %f\n", norm_vert.x, norm_vert.y,norm_vert.z); 
                             ~~~~~~~~~^~
<program source>:163:3: error: expected ')'
                __global t_light *lights
  ^
<program source>:160:10: note: to match this '('
void    calc(
         ^
<program source>:160:6: error: conflicting types for 'calc'
void    calc(
     ^
<program source>:101:6: note: previous declaration is here
void    calc(t_env *env, t_scene *scene);
     ^
<program source>:174:12: error: use of undeclared identifier 'scene'
        normalize(scene.cam.dir);
           ^
<program source>:175:41: error: use of undeclared identifier 'scene'
        init_norm_cam_dir(norm_vert, norm_hor, scene.cam.dir);
                                        ^
<program source>:191:16: error: use of undeclared identifier 'width'
        pix_hor = i % width;
               ^
<program source>:192:17: error: use of undeclared identifier 'width'
        pix_vert = i / width;
                ^
<program source>:194:5: error: member reference base type 'float [3]' is not a structure or union
        ray.x = scene.cam.dir.x;
 ~~~^~
<program source>:194:10: error: use of undeclared identifier 'scene'
        ray.x = scene.cam.dir.x;
         ^
<program source>:195:5: error: member reference base type 'float [3]' is not a structure or union
        ray.y = scene.cam.dir.y;
 ~~~^~
<program source>:195:10: error: use of undeclared identifier 'scene'
        ray.y = scene.cam.dir.y;
         ^
<program source>:196:5: error: member reference base type 'float [3]' is not a structure or union
        ray.z = scene.cam.dir.z;
 ~~~^~
<program source>:196:10: error: use of undeclared identifier 'scene'
        ray.z = scene.cam.dir.z;
         ^
<program source>:198:37: error: use of undeclared identifier 'height'
        coef = (((float)pix_vert - ((float)height / 2)) / ((float)height / 2)) * 0.3; //varie entre -0.66 et +0.66
                                    ^
<program source>:198:60: error: use of undeclared identifier 'height'
        coef = (((float)pix_vert - ((float)height / 2)) / ((float)height / 2)) * 0.3; //varie entre -0.66 et +0.66
                                                           ^
<program source>:200:5: error: member reference base type 'float [3]' is not a structure or union
        ray.z += -coef * norm_vert.z;
 ~~~^~
<program source>:200:28: error: member reference base type 'float [3]' is not a structure or union
        ray.z += -coef * norm_vert.z;
                  ~~~~~~~~~^~
<program source>:201:36: error: use of undeclared identifier 'width'
        coef = (((float)pix_hor - ((float)width / 2)) / ((float)width / 2)) * 0.3 * width_per_height; //varie entre -0.66 et +0.66
                                   ^
<program source>:201:58: error: use of undeclared identifier 'width'
        coef = (((float)pix_hor - ((float)width / 2)) / ((float)width / 2)) * 0.3 * width_per_height; //varie entre -0.66 et +0.66
                                                         ^
<program source>:201:78: error: use of undeclared identifier 'width_per_height'
        coef = (((float)pix_hor - ((float)width / 2)) / ((float)width / 2)) * 0.3 * width_per_height; //varie entre -0.66 et +0.66
                                                                             ^
<program source>:203:5: error: member reference base type 'float [3]' is not a structure or union
        ray.y += coef * norm_hor.y;
 ~~~^~
<program source>:203:26: error: member reference base type 'float [3]' is not a structure or union
        ray.y += coef * norm_hor.y;
                 ~~~~~~~~^~
<program source>:205:25: error: use of undeclared identifier 'scene'
        output[i] = calc_rayon(scene, ray);
                        ^
<program source>:207:7: warning: no previous prototype for function 'calc_plan'
float   calc_plan(t_obj *obj, float3 pos, float3 ray)
      ^
<program source>:219:6: warning: implicit declaration of function 'ft_abs_float' is invalid in C99
        if (ft_abs_float(diviseur) < 0.01)
     ^
<program source>:230:7: warning: no previous prototype for function 'calc_cone'
float   calc_cone(t_obj *obj, float3 pos, float3 ray)
      ^
<program source>:241:2: warning: implicit declaration of function 'ft_memset' is invalid in C99
        ft_memset(obj->intersect, 0, sizeof(float) * 3);
 ^
<program source>:241:17: error: no member named 'intersect' in 'struct s_obj'
        ft_memset(obj->intersect, 0, sizeof(float) * 3);
           ~~~  ^
<program source>:254:7: warning: no previous prototype for function 'calc_cylindre'
float   calc_cylindre(t_obj *obj, float3 pos, float3 ray)
      ^
<program source>:286:7: warning: no previous prototype for function 'ft_min_positiv'
float   ft_min_positiv(float a, float b)
      ^
<program source>:295:7: warning: no previous prototype for function 'calc_sphere'
float   calc_sphere(t_obj *obj, float3 pos, float3 ray)
      ^
<program source>:317:7: warning: no previous prototype for function 'calc_obj'
float   calc_obj(t_obj *obj, float3 pos, float3 ray)
      ^
<program source>:320:19: error: use of undeclared identifier 'SPHERE'
        if (obj->type == SPHERE)
                  ^
<program source>:322:19: error: use of undeclared identifier 'PLAN'
        if (obj->type == PLAN)
                  ^
<program source>:324:19: error: use of undeclared identifier 'CONE'
        if (obj->type == CONE)
                  ^
<program source>:326:19: error: use of undeclared identifier 'CYLINDRE'
        if (obj->type == CYLINDRE)
                  ^
<program source>:329:5: error: conflicting types for 'calc_dist'
int     calc_dist(float t, float3 ray)
    ^
<program source>:120:8: note: previous declaration is here
size_t  calc_dist(double t, float3 ray);
       ^
<program source>:334:31: error: too few arguments to function call, expected 3, have 2
        cam_to_obj = mult_vect(ray, t);
              ~~~~~~~~~       ^
<program source>:105:1: note: 'mult_vect' declared here
void    mult_vect(float3 res, float3 v, double t);
^
<program source>:341:85: warning: declaration of 'struct result_hit' will not be visible outside of this function
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
                                                                                    ^
<program source>:341:6: warning: no previous prototype for function 'assign_intersect_norm_vect'
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
     ^
<program source>:343:8: error: incomplete definition of type 'struct result_hit'
        output->intersect = mult_vect(ray, output->t);
 ~~~~~~^
<program source>:341:85: note: forward declaration of 'struct result_hit'
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
                                                                                    ^
<program source>:343:43: error: incomplete definition of type 'struct result_hit'
        output->intersect = mult_vect(ray, output->t);
                                    ~~~~~~^
<program source>:341:85: note: forward declaration of 'struct result_hit'
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
                                                                                    ^
<program source>:344:8: error: incomplete definition of type 'struct result_hit'
        output->intersect = add_vect(output->intersect, pos);
 ~~~~~~^
<program source>:341:85: note: forward declaration of 'struct result_hit'
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
                                                                                    ^
<program source>:344:37: error: incomplete definition of type 'struct result_hit'
        output->intersect = add_vect(output->intersect, pos);
                              ~~~~~~^
<program source>:341:85: note: forward declaration of 'struct result_hit'
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
                                                                                    ^
<program source>:345:16: error: no member named 'norm' in 'struct s_obj'
        cpy_vect(obj->norm, obj->intersect); // cpy dans obj norm
          ~~~  ^
<program source>:346:8: error: incomplete definition of type 'struct result_hit'
        output->intersect = add_vect(output->intersect, obj->pos);
 ~~~~~~^
<program source>:341:85: note: forward declaration of 'struct result_hit'
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
                                                                                    ^
<program source>:346:37: error: incomplete definition of type 'struct result_hit'
        output->intersect = add_vect(output->intersect, obj->pos);
                              ~~~~~~^
<program source>:341:85: note: forward declaration of 'struct result_hit'
void    assign_intersect_norm_vect(t_obj *obj, float t, float3 pos, float3 ray, struct result_hit *output)
                                                                                    ^
<program source>:349:6: warning: no previous prototype for function 'assign_norm_vect'
void    assign_norm_vect(t_obj *obj, float t, float3 pos, float3 ray)
     ^
<program source>:354:19: error: use of undeclared identifier 'PLAN'
        if (obj->type == PLAN)
                  ^
<program source>:355:17: error: no member named 'norm' in 'struct s_obj'
                cpy_vect(obj->norm, obj->dir); // cpy dans obj norm
           ~~~  ^
<program source>:358:65: warning: declaration of 'struct result_hit' will not be visible outside of this function
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:358:6: error: conflicting types for 'hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
     ^
<program source>:117:8: note: previous declaration is here
t_obj   *hit(t_scene *scene, double *scene_cam_pos, float3 ray);
       ^
<program source>:367:8: error: incomplete definition of type 'struct result_hit'
        output->obj = NULL;
 ~~~~~~^
<program source>:358:65: note: forward declaration of 'struct result_hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:367:16: error: use of undeclared identifier 'NULL'
        output->obj = NULL;
               ^
<program source>:368:8: error: incomplete definition of type 'struct result_hit'
        output->dist = (int)-1;
 ~~~~~~^
<program source>:358:65: note: forward declaration of 'struct result_hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:369:19: error: no member named 'objs_number' in 'struct s_scene'
        while (i < scene.objs_number)
            ~~~~~ ^
<program source>:372:3: error: use of undeclared identifier 'pos_translated'; did you mean 'pos_tranlated'?
                pos_translated = sub_vect(scene.cam.pos, obj_pos);
  ^~~~~~~~~~~~~~
  pos_tranlated
<program source>:362:9: note: 'pos_tranlated' declared here
        float3  pos_tranlated;
        ^
<program source>:372:44: error: use of undeclared identifier 'obj_pos'
                pos_translated = sub_vect(scene.cam.pos, obj_pos);
                                           ^
<program source>:373:21: error: use of undeclared identifier 'pos_translated'; did you mean 'pos_tranlated'?
                t = calc_obj(obj, pos_translated, ray);
                    ^~~~~~~~~~~~~~
                    pos_tranlated
<program source>:362:9: note: 'pos_tranlated' declared here
        float3  pos_tranlated;
        ^
<program source>:375:33: error: incomplete definition of type 'struct result_hit'
                if (dist != 0 && dist < output->dist)
                          ~~~~~~^
<program source>:358:65: note: forward declaration of 'struct result_hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:377:10: error: incomplete definition of type 'struct result_hit'
                        output->dist = dist;
   ~~~~~~^
<program source>:358:65: note: forward declaration of 'struct result_hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:378:10: error: incomplete definition of type 'struct result_hit'
                        output->t = t;
   ~~~~~~^
<program source>:358:65: note: forward declaration of 'struct result_hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:379:10: error: incomplete definition of type 'struct result_hit'
                        output->obj = obj;
   ~~~~~~^
<program source>:358:65: note: forward declaration of 'struct result_hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:380:31: error: use of undeclared identifier 'tmp'
                        assign_intersect_norm_vect(tmp, t, translated_pos, ray, output);
                              ^
<program source>:381:21: error: use of undeclared identifier 'tmp'
                        assign_norm_vect(tmp, t, pos, ray, output);
                    ^
<program source>:385:12: error: incomplete definition of type 'struct result_hit'
        if (output->obj == NULL)
     ~~~~~~^
<program source>:358:65: note: forward declaration of 'struct result_hit'
int             hit(t_scene scene, float3 ray, t_obj *shortest_obj, struct result_hit *output)
                                                                ^
<program source>:385:21: error: use of undeclared identifier 'NULL'
        if (output->obj == NULL)
                    ^
<program source>:389:5: warning: no previous prototype for function 'calc_color'
int     calc_color(float coef_lum, int color)
    ^
<program source>:409:5: warning: no previous prototype for function 'calc_color_specular'
int     calc_color_specular(float coef_lum, int color)
    ^
<program source>:430:32: warning: declaration of 'struct result_hit' will not be visible outside of this function
float   calc_lum_specular(struct result_hit *result_hit, float3 ray, float *lum_vect)
                               ^
<program source>:430:7: warning: no previous prototype for function 'calc_lum_specular'
float   calc_lum_specular(struct result_hit *result_hit, float3 ray, float *lum_vect)
      ^
<program source>:436:40: error: incomplete definition of type 'struct result_hit'
        reflection_vect = mult_vect(result_hit->norm, 2 * scalar_product(lum_vect, result_hit->norm))
                             ~~~~~~~~~~^
<program source>:430:32: note: forward declaration of 'struct result_hit'
float   calc_lum_specular(struct result_hit *result_hit, float3 ray, float *lum_vect)
                               ^
<program source>:446:31: warning: declaration of 'struct result_hit' will not be visible outside of this function
float   calc_lum_diffuse(struct result_hit *result_hit, float3 ray, float *lum_vect)
                              ^
<program source>:446:7: warning: no previous prototype for function 'calc_lum_diffuse'
float   calc_lum_diffuse(struct result_hit *result_hit, float3 ray, float *lum_vect)
      ^
<program source>:451:22: error: incomplete definition of type 'struct result_hit'
        normalize(result_hit->norm); /////////////////////////////////////////////////////////////////////////////TODO danger
           ~~~~~~~~~~^
<program source>:446:31: note: forward declaration of 'struct result_hit'
float   calc_lum_diffuse(struct result_hit *result_hit, float3 ray, float *lum_vect)
                              ^
<program source>:454:57: error: incomplete definition of type 'struct result_hit'
        intensite_diffuse = scalar_product(lum_vect, result_hit->norm);
                                              ~~~~~~~~~~^
<program source>:446:31: note: forward declaration of 'struct result_hit'
float   calc_lum_diffuse(struct result_hit *result_hit, float3 ray, float *lum_vect)
                              ^
<program source>:460:8: warning: no previous prototype for function 'calc_lum_vect'
float3  calc_lum_vect(t_obj *obj, t_light *lum)
       ^
<program source>:465:21: error: use of undeclared identifier 'hit_result'
        sub_vect(lum_vect, hit_result->intersect, lum->pos);
                    ^
<program source>:469:41: warning: declaration of 'struct result_hit' will not be visible outside of this function
int     calc_all_lum(t_scene *scene, struct result_hit *result_hit, float3 ray)
                                        ^
<program source>:469:5: error: conflicting types for 'calc_all_lum'
int     calc_all_lum(t_scene *scene, struct result_hit *result_hit, float3 ray)
    ^
<program source>:115:8: note: previous declaration is here
size_t  calc_all_lum(t_scene *scene, t_obj *obj, float3 ray);
       ^
<program source>:480:18: error: incomplete definition of type 'struct result_hit'
        obj = result_hit->obj;
       ~~~~~~~~~~^
<program source>:469:41: note: forward declaration of 'struct result_hit'
int     calc_all_lum(t_scene *scene, struct result_hit *result_hit, float3 ray)
                                        ^
<program source>:481:9: error: use of undeclared identifier 'i'
        while (i < scene.lights_number)
        ^
<program source>:481:18: error: member reference type 't_scene *' (aka 'struct s_scene *') is a pointer; maybe you meant to use '->'?
        while (i < scene.lights_number)
            ~~~~~^
                 ->
<program source>:481:19: error: no member named 'lights_number' in 'struct s_scene'
        while (i < scene.lights_number)
            ~~~~~ ^
<program source>:483:3: error: use of undeclared identifier 'light'
                light = scene.lights + i;
  ^
<program source>:483:16: error: member reference type 't_scene *' (aka 'struct s_scene *') is a pointer; maybe you meant to use '->'?
                light = scene.lights + i;
          ~~~~~^
               ->
<program source>:483:26: error: use of undeclared identifier 'i'
                light = scene.lights + i;
                         ^
<program source>:484:33: error: use of undeclared identifier 'light'
                lum_vect = calc_lum_vect(obj, light);
                                ^
<program source>:491:42: warning: incompatible pointer types passing 't_obj *' (aka 'struct s_obj *') to parameter of type 'struct result_hit *'
                        intensite_diffuse += calc_lum_diffuse(obj, ray, lum_vect);
                                         ^~~
<program source>:446:43: note: passing argument to parameter 'result_hit' here
float   calc_lum_diffuse(struct result_hit *result_hit, float3 ray, float *lum_vect)
                                          ^
<program source>:491:52: error: passing '__float3' to parameter of incompatible type 'float *'
                        intensite_diffuse += calc_lum_diffuse(obj, ray, lum_vect);
                                                   ^~~~~~~~
<program source>:446:74: note: passing argument to parameter 'lum_vect' here
float   calc_lum_diffuse(struct result_hit *result_hit, float3 ray, float *lum_vect)
                                                                         ^
<program source>:492:44: warning: incompatible pointer types passing 't_obj *' (aka 'struct s_obj *') to parameter of type 'struct result_hit *'
                        intensite_specular += calc_lum_specular(obj, ray, lum_vect);
                                           ^~~
<program source>:430:44: note: passing argument to parameter 'result_hit' here
float   calc_lum_specular(struct result_hit *result_hit, float3 ray, float *lum_vect)
                                           ^
<program source>:492:54: error: passing '__float3' to parameter of incompatible type 'float *'
                        intensite_specular += calc_lum_specular(obj, ray, lum_vect);
                                                     ^~~~~~~~
<program source>:430:75: note: passing argument to parameter 'lum_vect' here
float   calc_lum_specular(struct result_hit *result_hit, float3 ray, float *lum_vect)
                                                                          ^
<program source>:494:3: error: use of undeclared identifier 'i'
                i++;
  ^
<program source>:497:30: error: expected expression
        color = calc_color_specular(struct *result_hit, intensite_specular, color);
                             ^
<program source>:500:6: warning: no previous prototype for function 'hit_ombre'
int             hit_ombre(float3 intersect, t_scene *scene, float *scene_cam_pos, float3 ray, t_obj *obj)
     ^
<program source>:510:17: error: use of undeclared identifier 'NULL'
        shortest_obj = NULL;
                ^
<program source>:515:18: error: passing 'float [3]' to parameter of incompatible type '__float3'
                translate_base(pos, scene_cam_pos, tmp->pos);
                 ^~~
<program source>:119:28: note: passing argument to parameter 'res' here
void    translate_base(float3 res, float3 scene_cam_pos, float3 obj_pos);
                           ^
<program source>:516:12: error: no member named 'f' in 'struct s_obj'
                t = tmp->f(tmp, pos, ray);
      ~~~  ^
<program source>:524:14: error: no member named 'next' in 'struct s_obj'
                tmp = tmp->next;
        ~~~  ^
<program source>:529:33: error: passing 'float [3]' to parameter of incompatible type '__float3'
        add_vect(intersect, intersect, pos);
                                ^~~
<program source>:107:44: note: passing argument to parameter 'v' here
void    add_vect(float3 res, float3 u, float3 v);
                                           ^
<program source>:534:5: error: conflicting types for 'obj_between_light'
int     obj_between_light(t_scene *scene, t_obj *obj, t_light *lum, float *lum_vect)
    ^
<program source>:118:8: note: previous declaration is here
size_t  obj_between_light(t_scene *scene, t_obj *obj, t_light *lum, double *lum_vect);
       ^
<program source>:541:12: error: passing 'float [3]' to parameter of incompatible type '__float3'
        mult_vect(lum_vect_cpy, lum_vect, -1);
           ^~~~~~~~~~~~
<program source>:105:23: note: passing argument to parameter 'res' here
void    mult_vect(float3 res, float3 v, double t);
                      ^
<program source>:542:48: error: no member named 'intersect' in 'struct s_obj'
        if (!hit_ombre(hit_obj_intersect, scene, obj->intersect, lum_vect_cpy, obj))
                                          ~~~  ^
<program source>:544:25: error: no member named 'intersect' in 'struct s_obj'
        sub_vect(obj_obj, obj->intersect, hit_obj_intersect);
                   ~~~  ^
<program source>:545:27: error: no member named 'intersect' in 'struct s_obj'
        sub_vect(obj_light, obj->intersect, lum->pos);
                     ~~~  ^
<program source>:546:18: error: passing 'float [3]' to parameter of incompatible type '__float3'
        if (norme_carre(obj_obj) < norme_carre(obj_light))
                 ^~~~~~~
<program source>:111:27: note: passing argument to parameter 'v' here
double  norme_carre(float3 v);
                          ^
<program source>:546:41: error: passing 'float [3]' to parameter of incompatible type '__float3'
        if (norme_carre(obj_obj) < norme_carre(obj_light))
                                        ^~~~~~~~~
<program source>:111:27: note: passing argument to parameter 'v' here
double  norme_carre(float3 v);
                          ^
<program source>:555:7: error: conflicting types for 'calc_delta'
float   calc_delta(float a, float b, float c)
      ^
<program source>:103:8: note: previous declaration is here
double  calc_delta(double a, double b, double c);
       ^
<program source>:560:7: error: conflicting types for 'ft_min'
float   ft_min(float u, float v)
      ^
<program source>:104:8: note: previous declaration is here
double  ft_min(double u, double v);
       ^
<program source>:565:7: error: conflicting types for 'ft_abs_float'
float   ft_abs_float(float u)
      ^
<program source>:219:6: note: previous implicit declaration is here
        if (ft_abs_float(diviseur) < 0.01)
     ^
<program source>:569:7: error: conflicting types for 'norme_carre'
float   norme_carre(float3 v)
      ^
<program source>:111:8: note: previous declaration is here
double  norme_carre(float3 v);
       ^
<program source>:574:7: error: conflicting types for 'scalar_product'
float   scalar_product(float3 u, float3 v)
      ^
<program source>:112:8: note: previous declaration is here
double  scalar_product(float3 u, float3 v);
       ^
<program source>:579:8: error: redeclaration of 'normalize' must have the 'overloadable' attribute
float3  normalize(float3 v)
       ^
<program source>:113:8: note: previous overload of function is here
float3  normalize(float3 v);
       ^
<program source>:581:42: error: too few arguments to function call, expected 3, have 2
        return (div_vect(v, sqrt(norme_carre(v))));
         ~~~~~~~~                        ^
<program source>:106:1: note: 'div_vect' declared here
void    div_vect(float3 res, float3 v, double t);
^
<program source>:583:8: error: conflicting types for 'mult_vect'
float3  mult_vect( float3 v, float t)
       ^
<program source>:105:6: note: previous declaration is here
void    mult_vect(float3 res, float3 v, double t);
     ^
<program source>:593:8: error: conflicting types for 'div_vect'
float3  div_vect(float3 v, float t)
       ^
<program source>:106:6: note: previous declaration is here
void    div_vect(float3 res, float3 v, double t);
     ^
<program source>:598:3: error: non-void function 'div_vect' should return a value
                return ;
  ^
<program source>:605:8: error: conflicting types for 'add_vect'
float3  add_vect(float3 u, float3 v)
       ^
<program source>:107:6: note: previous declaration is here
void    add_vect(float3 res, float3 u, float3 v);
     ^
<program source>:615:8: error: conflicting types for 'cpy_vect'
float3  cpy_vect(float3 u, float3 v)
       ^
<program source>:109:6: note: previous declaration is here
void    cpy_vect(float3 u, float3 v);
     ^
<program source>:625:8: error: conflicting types for 'sub_vect'
float3  sub_vect(float3 u, float3 v)
       ^
<program source>:108:6: note: previous declaration is here
void    sub_vect(float3 res, float3 u, float3 v);
     ^
<program source>:635:8: error: conflicting types for 'vectorial_product'
float3  vectorial_product(float3 u, float3 v)
       ^
<program source>:121:6: note: previous declaration is here
void    vectorial_product(float3 res, float3 u, float3 v);
     ^
<program source>:659:6: warning: no previous prototype for function 'mat_mult'
void    mat_mult(float3 res[3], float3 a[3], float3 b[3])
     ^
<program source>:692:6: warning: no previous prototype for function 'mat_mult_vect'
void    mat_mult_vect(float3 res, float3 a[3], float3 x)
     ^
<program source>:723:11: warning: incompatible pointer types passing 'float [3][3]' to parameter of type '__float3 *'
        mat_mult(res, mat_y, mat_x);
          ^~~
<program source>:659:22: note: passing argument to parameter 'res' here
void    mat_mult(float3 res[3], float3 a[3], float3 b[3])
                     ^
<program source>:723:16: warning: incompatible pointer types passing 'float [3][3]' to parameter of type '__float3 *'
        mat_mult(res, mat_y, mat_x);
               ^~~~~
<program source>:659:37: note: passing argument to parameter 'a' here
void    mat_mult(float3 res[3], float3 a[3], float3 b[3])
                                    ^
<program source>:723:23: warning: incompatible pointer types passing 'float [3][3]' to parameter of type '__float3 *'
        mat_mult(res, mat_y, mat_x);
                      ^~~~~
<program source>:659:50: note: passing argument to parameter 'b' here
void    mat_mult(float3 res[3], float3 a[3], float3 b[3])
                                                 ^
<program source>:724:21: warning: incompatible pointer types passing 'float [3][3]' to parameter of type '__float3 *'
        mat_mult_vect(ray, res, ray);
                    ^~~
<program source>:692:39: note: passing argument to parameter 'a' here
void    mat_mult_vect(float3 res, float3 a[3], float3 x)
                                      ^

